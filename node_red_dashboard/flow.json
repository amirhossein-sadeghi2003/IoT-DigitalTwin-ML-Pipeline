[
  {
    "id": "flow3",
    "type": "tab",
    "label": "iot-step2plus",
    "disabled": false
  },
  {
    "id": "mqtt-broker1",
    "type": "mqtt-broker",
    "name": "hivemq",
    "broker": "broker.hivemq.com",
    "port": "1883",
    "clientid": "",
    "usetls": false,
    "protocolVersion": "4",
    "keepalive": "60",
    "cleansession": true
  },
  {
    "id": "ui_tab1",
    "type": "ui_tab",
    "name": "ESP32",
    "icon": "dashboard",
    "disabled": false,
    "hidden": false
  },
  {
    "id": "ui_grp_status",
    "type": "ui_group",
    "name": "status",
    "tab": "ui_tab1",
    "order": 1,
    "disp": true,
    "width": "12",
    "collapse": false
  },
  {
    "id": "ui_grp_env",
    "type": "ui_group",
    "name": "env",
    "tab": "ui_tab1",
    "order": 2,
    "disp": true,
    "width": "12",
    "collapse": false
  },
  {
    "id": "mqtt-in1",
    "type": "mqtt in",
    "z": "flow3",
    "name": "sub sensors",
    "topic": "iot/test/sensors",
    "qos": "0",
    "datatype": "auto",
    "broker": "mqtt-broker1",
    "nl": false,
    "rap": true,
    "rh": 0,
    "x": 160,
    "y": 120,
    "wires": [["json1","debug_raw"]]
  },
  {
    "id": "debug_raw",
    "type": "debug",
    "z": "flow3",
    "name": "raw",
    "active": true,
    "tosidebar": true,
    "complete": "payload",
    "targetType": "msg",
    "x": 360,
    "y": 80,
    "wires": []
  },
  {
    "id": "json1",
    "type": "json",
    "z": "flow3",
    "name": "parse",
    "property": "payload",
    "action": "",
    "pretty": false,
    "x": 350,
    "y": 120,
    "wires": [["sw1"]]
  },
  {
    "id": "sw1",
    "type": "switch",
    "z": "flow3",
    "name": "has status?",
    "property": "payload.status",
    "propertyType": "msg",
    "rules": [{"t":"hask"},{"t":"else"}],
    "checkall": "true",
    "repair": false,
    "outputs": 2,
    "x": 520,
    "y": 120,
    "wires": [["chg_status","debug_status"], ["fn_split","debug_data","fn_split2"]]
  },
  {
    "id": "debug_status",
    "type": "debug",
    "z": "flow3",
    "name": "status dbg",
    "active": true,
    "tosidebar": true,
    "complete": "payload.status",
    "targetType": "msg",
    "x": 720,
    "y": 80,
    "wires": []
  },
  {
    "id": "debug_data",
    "type": "debug",
    "z": "flow3",
    "name": "data dbg",
    "active": true,
    "tosidebar": true,
    "complete": "payload",
    "targetType": "msg",
    "x": 720,
    "y": 180,
    "wires": []
  },
  {
    "id": "chg_status",
    "type": "change",
    "z": "flow3",
    "name": "to status text",
    "rules": [
      { "t":"set", "p":"payload", "pt":"msg", "to":"payload.status", "tot":"msg" }
    ],
    "x": 720,
    "y": 120,
    "wires": [["ui_status"]]
  },
  {
    "id": "ui_status",
    "type": "ui_text",
    "z": "flow3",
    "group": "ui_grp_status",
    "order": 1,
    "width": 12,
    "height": 1,
    "name": "status txt",
    "label": "status",
    "format": "{{msg.payload}}",
    "layout": "row-spread",
    "x": 910,
    "y": 120,
    "wires": []
  },
  {
    "id": "fn_split",
    "type": "function",
    "z": "flow3",
    "name": "get t & hum",
    "func": "let p = msg.payload||{};\nfunction n(v){return (v===null||v===undefined||Number.isNaN(v))?undefined:v}\nreturn [ {payload:n(p.t)}, {payload:n(p.hum)} ];",
    "outputs": 2,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "x": 700,
    "y": 220,
    "wires": [["ui_temp"], ["ui_hum"]]
  },
  {
    "id": "ui_temp",
    "type": "ui_gauge",
    "z": "flow3",
    "name": "temp",
    "group": "ui_grp_env",
    "order": 1,
    "width": 6,
    "height": 3,
    "gtype": "gage",
    "title": "Temp (C)",
    "label": "C",
    "format": "{{value}}",
    "min": "0",
    "max": "50",
    "x": 910,
    "y": 220,
    "wires": []
  },
  {
    "id": "ui_hum",
    "type": "ui_gauge",
    "z": "flow3",
    "name": "hum",
    "group": "ui_grp_env",
    "order": 2,
    "width": 6,
    "height": 3,
    "gtype": "gage",
    "title": "Humidity (%)",
    "label": "%",
    "format": "{{value}}",
    "min": "0",
    "max": "100",
    "x": 910,
    "y": 260,
    "wires": []
  },


  {
    "id": "fn_split2",
    "type": "function",
    "z": "flow3",
    "name": "get lux & mag",
    "func": "let p = msg.payload||{};\nfunction n(v){return (v===null||v===undefined||Number.isNaN(v))?undefined:v}\nreturn [ {payload:n(p.lux)}, {payload:(p.mag?\"Closed\":\"Open\")} ];",
    "outputs": 2,
    "noerr": 0,
    "x": 700,
    "y": 300,
    "wires": [["ui_lux"], ["ui_mag"]]
  },
  {
    "id": "ui_lux",
    "type": "ui_gauge",
    "z": "flow3",
    "name": "lux",
    "group": "ui_grp_env",
    "order": 3,
    "width": 6,
    "height": 3,
    "gtype": "gage",
    "title": "Light (lux)",
    "label": "lux",
    "format": "{{value}}",
    "min": "0",
    "max": "10000",
    "x": 910,
    "y": 300,
    "wires": []
  },
  {
    "id": "ui_mag",
    "type": "ui_text",
    "z": "flow3",
    "group": "ui_grp_status",
    "order": 2,
    "width": 12,
    "height": 1,
    "name": "mag txt",
    "label": "magnet",
    "format": "{{msg.payload}}",
    "layout": "row-spread",
    "x": 910,
    "y": 340,
    "wires": []
  }
]

